services:
  kowl:
    image: ${IMAGE_NAME:-docker.redpanda.com/redpandadata/console}:${IMAGE_TAG:-latest}
    environment:
      SERVER_LISTENPORT:
      KAFKA_BROKERS:
      KAFKA_SCHEMAREGISTRY_ENABLED:
      KAFKA_SCHEMAREGISTRY_URLS:
      CONNECT_ENABLED:
      CONNECT_CLUSTERS_NAME:
      CONNECT_CLUSTERS_URL:
      ANALYTICS_ENABLED:
    networks:
      kafka-net:
      traefik-net:
    healthcheck:
      test: curl -s -o /dev/null http://localhost:${SERVER_LISTENPORT}
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-5}
      start_period: ${HEALTHCHECK_START_PERIOD:-1m}
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-1}
      restart_policy:
        delay: ${RESTART_DELAY:-10s}
      update_config:
        delay: ${UPDATE_DELAY:-30s}
      labels:
        traefik.enable: ${TRAEFIK_ENABLE:-true}
        traefik.http.routers.kowl.entrypoints: ${TRAEFIK_ENTRYPOINT:-http}
        traefik.http.routers.kowl.rule: Host(`${TRAEFIK_SUBDOMAIN:-kowl}.${PUBLIC_HOSTNAME}`)
        traefik.http.middlewares.kowl-auth.basicauth.users: ${TRAEFIK_AUTH}
        traefik.http.routers.kowl.middlewares: kowl-auth
        traefik.http.services.kowl.loadbalancer.server.port: ${SERVER_LISTENPORT}
      resources:
        limits:
          cpus: '${RESOURCES_LIMITS_CPUS:-0.5}'
          memory: ${RESOURCES_LIMITS_MEMORY:-128M}
        reservations:
          cpus: '${RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${RESOURCES_RESERVATIONS_MEMORY:-32M}

networks:
  kafka-net:
    name: ${KAFKA_NET_NAME:-kafka-net}
    driver: ${KAFKA_NET_DRIVER:-overlay}
    external: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true
